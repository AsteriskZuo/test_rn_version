require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, min_ios_version_supported
prepare_react_native_project!

def __apply_flipper_post_install_workaround(installer)
  # https://github.com/facebook/react-native/issues/43335#issuecomment-1982794252
  installer.pods_project.targets.each do |target|
    if target.name == 'Flipper'
      file_path = 'Pods/Flipper/xplat/Flipper/FlipperTransportTypes.h'
      if File.exist?(file_path)
        contents = File.read(file_path)
        unless contents.include?('#include <functional>')
          File.open(file_path, 'w') do |file|
            file.puts('#include <functional>')
            file.puts(contents)
          end
        end
      end
    end
  end
end

def __apply_Xcode_15_cxx17_post_install_workaround(installer)
  # https://github.com/facebook/react-native/issues/43335#issuecomment-1982794252
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # 判断 config.build_settings['GCC_PREPROCESSOR_DEFINITIONS']  的类型 是 string 还是 array
      # puts "config.build_settings['GCC_PREPROCESSOR_DEFINITIONS']: #{config.build_settings['GCC_PREPROCESSOR_DEFINITIONS']}"
      # # 如果是 string 则转换为 array
      # if config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'].is_a?(String)
      #   puts "is string"
      #   config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'].split(' ')
      # end
      # puts config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'].is_a?(Array)
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ''
      if !config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'].include?('$(inherited)')
        # config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '$(inherited)'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << ' ' << '$(inherited)'
      end
      if !config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'].include?('_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION')
        # config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION=1'
        # 向数组中添加元素
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << ' ' << ' _LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION'
      end
    end
  end
end

def __apply_yoga_post_install_workaround(installer)
  # https://github.com/facebook/react-native/issues/36758
  # https://ruby-doc.org/3.3.6/String.html
  installer.pods_project.targets.each do |target|
    if target.name == 'Yoga'
      file_path = File.join(__dir__, '../node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp')
      if File.exist?(file_path)
        file_content = File.read(file_path)
        puts file_content.include?('node->getLayout().hadOverflow() ||')
        if file_content.include?('node->getLayout().hadOverflow() |') && !file_content.include?('node->getLayout().hadOverflow() ||')
          new_content = file_content.gsub('node->getLayout().hadOverflow() |', 'node->getLayout().hadOverflow() ||')
          # File.write(file_path, new_content)
          File.open(file_path, 'w') { |file| file.puts new_content }
        end
      end
    end
  end
end
# Force pods to match minimum iOS version for React Native
# Fixes build issue on Xcode Cloud where some pods``
# Use iOS 12 calls despite being set as iOS 11
def __apply_minimum_target_post_install_workaround(installer)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      current_target = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
      minimum_target = defined?(min_ios_version_supported) ? min_ios_version_supported : 12.4
      minimum_target = 12.4
      if current_target.to_f < minimum_target
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = minimum_target
      end
    end
  end
end

def __apply_rn_068_chatsdk_post_install_workaround(installer)
  # https://github.com/facebook/react-native/issues/36758
  # https://ruby-doc.org/3.3.6/String.html
  installer.pods_project.targets.each do |target|
    if target.name == 'react-native-chat-sdk'
      target.build_configurations.each do |config|
        xcconfig = config.build_settings
        puts "Target: #{target.name}"
        puts "XCConfig: #{xcconfig}"
        
        xcconfig['OTHER_LDFLAGS'] ||= ''
        xcconfig['OTHER_LDFLAGS'] << ' '
        xcconfig['OTHER_LDFLAGS'] << ' -ObjC'
        
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] ||= ''
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += ' '
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += '$(inherited)'
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += ' '
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += 'OBJC_LANGUAGE'
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += ' '
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += 'REACT_NATIVE_ARCHITECTURE'
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += ' '
        xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += 'IOS_PLATFORM'
        # xcconfig['GCC_PREPROCESSOR_DEFINITIONS'] += [
        #   '$(inherited)',
        #   'OBJC_LANGUAGE',
        #   'REACT_NATIVE_ARCHITECTURE',
        #   'IOS_PLATFORM'
        # ]
      end
    end
  end
end

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'test_rn_071' do
  config = use_native_modules!

  # pod 'react-native-chat-sdk', :path => '../node_modules/react-native-chat-sdk'

  # Flags change depending on the env values.
  flags = get_default_flags()
  puts "flags: #{flags}"

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => false,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'test_rn_071Tests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    __apply_flipper_post_install_workaround(installer)
    __apply_Xcode_15_cxx17_post_install_workaround(installer)
    __apply_minimum_target_post_install_workaround(installer)
    __apply_yoga_post_install_workaround(installer)
    # __apply_rn_068_chatsdk_post_install_workaround(installer)
  end
end
